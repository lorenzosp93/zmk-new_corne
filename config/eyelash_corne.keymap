#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>


#include "zmk-helpers/key-labels/eyelash42.h"                                      // Source key-labels.
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // Left-hand keys.
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // Right-hand keys.
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // Thumb keys.

#define TAPPING_TERM_MS 180
#define QUICK_TAP_MS 100
#define REQUIRE_PRIOR_IDLE_MS 120
#define REQUIRE_PRIOR_IDLE_MS_SHIFT 0

// Layers
#define QWERTY 0
#define COLEMAK 1
#define LOWER 2
#define SETTINGS 3
#define MOVEMENT 4

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        hml: home_row_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: home_row_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        hmls: home_row_mods_left_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS_SHIFT>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hmrs: home_row_mods_right_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS_SHIFT>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC            &kp Q            &kp W            &kp E            &kp R            &kp T                        &mmv MOVE_UP                        &kp Y            &kp U            &kp I            &kp O            &kp P            &kp LBKT
&kp TAB            &hml LCTRL A     &hml LALT S      &hml LGUI D      &hmls LSFT F     &kp G    &mmv MOVE_LEFT      &mkp LCLK      &mmv MOVE_RIGHT      &kp H            &hmrs RSFT J     &hmr RGUI K      &hmr RALT L      &hmr RCTRL SEMI  &kp SQT
&hml LSFT GRAVE    &lt MOVEMENT Z          &kp X            &kp C            &kp V            &kp B    &kp SPACE           &mmv MOVE_DOWN                      &kp N            &kp M            &kp COMMA        &kp DOT          &lt MOVEMENT FSLH       &hmr RSFT MINUS
                                                     &lt LOWER DEL        &kp BSPC         &kp SPACE                                                        &hmr LG(LC(LA(LSFT))) ENTER       &mo MOVEMENT            &lt LOWER ESC        
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        colemak_layer {
            display-name = "COLEMAK";
            bindings = <
&kp ESC            &kp Q            &kp W            &kp F            &kp P            &kp B                        &mmv MOVE_UP                        &kp J            &kp L            &kp U            &kp Y            &kp SEMI            &kp LBKT
&kp TAB            &hml LCTRL A     &hml LALT R      &hml LGUI S      &hmls LSFT T     &kp G    &mmv MOVE_LEFT      &mkp LCLK      &mmv MOVE_RIGHT      &kp M            &hmrs RSFT N     &hmr RGUI E      &hmr RALT I      &hmr RCTRL O  &kp SQT
&hml LSFT GRAVE    &lt MOVEMENT Z          &kp X            &kp C            &kp D            &kp V    &kp SPACE           &mmv MOVE_DOWN                      &kp K            &kp H            &kp COMMA        &kp DOT          &lt MOVEMENT FSLH       &hmr RSFT MINUS
                                                     &lt LOWER DEL        &kp BSPC         &kp SPACE                                                        &hmr LG(LC(LA(LSFT))) ENTER       &mo MOVEMENT            &lt LOWER ESC        
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };


        lower_layer {
            display-name = "Lower";
            bindings = <
&trans            &kp EXCL          &kp AT           &kp HASH         &kp DOLLAR       &kp PRCNT                    &mmv MOVE_UP                        &kp CARET        &kp AMPS          &kp STAR         &kp LPAR         &kp RPAR        &kp RBKT
&kp CAPS        &hml LCTRL N1     &hml LALT N2     &hml LGUI N3     &hmls LSFT N4    &kp N5    &kp LC(LS(TAB))    &mkp RCLK      &kp LC(TAB)          &kp  N6          &hmrs RSFT N7     &hmr RGUI N8     &hmr RALT N9     &hmr RCTRL N0   &kp BSLH
&caps_word        &kp F1            &kp F2            &kp F3           &kp F4          &kp F5      &trans             &mmv MOVE_DOWN                    &kp F6           &kp F7            &kp F8           &kp DOT          &kp FSLH        &kp EQUAL
                                                     &mo SETTINGS     &trans           &trans                                                           &trans           &trans            &mo SETTINGS
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "Settings";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                 &mmv MOVE_UP                      &studio_unlock  &trans      &trans       &trans  &to COLEMAK &to QWERTY   
&trans  &trans    &trans     &trans  &trans  &trans            &mmv MOVE_LEFT  &mkp MCLK       &mmv MOVE_RIGHT  &trans  &trans  &trans   &trans  &out OUT_USB  &out OUT_BLE
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF &kp C_MUTE   &mmv MOVE_DOWN               &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans   &trans
                                    &trans     &trans     &trans                                                            &trans    &trans     &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Movement";
            bindings = <
&trans     &trans     &trans    &trans    &trans    &trans                                  &msc SCRL_UP                     &trans     &trans     &trans    &trans    &trans    &trans
&trans     &kp LCTRL     &kp LALT    &kp LGUI    &kp LSFT    &trans                &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &kp LEFT     &kp DOWN   &kp UP     &kp RIGHT  &trans    &mkp MB4
&trans     &trans     &trans    &trans    &trans    &trans   &trans                 &msc SCRL_DOWN                   &trans     &trans     &trans    &trans    &trans    &mkp MB5
                                &trans      &trans      &trans                                                                   &trans       &trans     &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
